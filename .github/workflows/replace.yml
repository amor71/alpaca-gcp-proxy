name: "Replace"

on:
  workflow_dispatch:
    branches: ["master"]

permissions:
  contents: read

jobs:
  terraform:
    name: "React Replace"
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v3

      # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.GCP_CREDENTIALS }}

      # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Init
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
        run: terraform init

      # Generates an execution plan for Terraform
      #- name: Terraform Plan
      #  env:
      #    GOOGLE_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
      #  run: terraform plan -input=false

      # On push to "master", build or change infrastructure according to Terraform configuration files
      # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks

      - name: Apply
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
        run: terraform apply -input=false -var="token_bypass=${{ secrets.TOKEN_BYPASS }}" -auto-approve -input=false

      - name: Replace
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
        run: terraform apply -input=false -var="token_bypass=${{ secrets.TOKEN_BYPASS }}" -replace=google_cloud_run_service.react -auto-approve -input=false
